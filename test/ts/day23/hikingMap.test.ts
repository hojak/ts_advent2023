import { expect } from "chai";
import { describe } from "mocha";
import { HikingMap } from "../../../src/ts/day23/hikingMap";

describe ("Day 23: HikingMap", () => {

    let testee = new HikingMap ( 
        "#.#####################\n"+
        "#.......#########...###\n"+
        "#######.#########.#.###\n"+
        "###.....#.>.>.###.#.###\n"+
        "###v#####.#v#.###.#.###\n"+
        "###.>...#.#.#.....#...#\n"+
        "###v###.#.#.#########.#\n"+
        "###...#.#.#.......#...#\n"+
        "#####.#.#.#######.#.###\n"+
        "#.....#.#.#.......#...#\n"+
        "#.#####.#.#.#########v#\n"+
        "#.#...#...#...###...>.#\n"+
        "#.#.#v#######v###.###v#\n"+
        "#...#.>.#...>.>.#.###.#\n"+
        "#####v#.#.###v#.#.###.#\n"+
        "#.....#...#...#.#.#...#\n"+
        "#.#########.###.#.#.###\n"+
        "#...###...#...#...#.###\n"+
        "###.###.#.###v#####v###\n"+
        "#...#...#.#.>.>.#.>.###\n"+
        "#.###.###.#.###.#.#v###\n"+
        "#.....###...###...#...#\n"+
        "#####################.#"
    );

    describe ("constructor", () => {
        it ( "should create a map of size 23x23", () => {
            expect(testee.width).to.be.equal(23);
            expect(testee.height).to.be.equal(23);
        })
    })

    describe ("getLongestWalk", () => {
        it ( "should return the correct route", () => {
            expect(testee.getLongestWalk()).to.be.equal (
                "#S#####################\n"+
                "#OOOOOOO#########...###\n"+
                "#######O#########.#.###\n"+
                "###OOOOO#OOO>.###.#.###\n"+
                "###O#####O#O#.###.#.###\n"+
                "###OOOOO#O#O#.....#...#\n"+
                "###v###O#O#O#########.#\n"+
                "###...#O#O#OOOOOOO#...#\n"+
                "#####.#O#O#######O#.###\n"+
                "#.....#O#O#OOOOOOO#...#\n"+
                "#.#####O#O#O#########v#\n"+
                "#.#...#OOO#OOO###OOOOO#\n"+
                "#.#.#v#######O###O###O#\n"+
                "#...#.>.#...>OOO#O###O#\n"+
                "#####v#.#.###v#O#O###O#\n"+
                "#.....#...#...#O#O#OOO#\n"+
                "#.#########.###O#O#O###\n"+
                "#...###...#...#OOO#O###\n"+
                "###.###.#.###v#####O###\n"+
                "#...#...#.#.>.>.#.>O###\n"+
                "#.###.###.#.###.#.#O###\n"+
                "#.....###...###...#OOO#\n"+
                "#####################F#"
            );
        });
    });
})